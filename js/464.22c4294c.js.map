{"version":3,"file":"js/464.22c4294c.js","mappings":"2LAGaA,IAAI,WAAWC,MAAM,Y,oFAF9BC,EAAAA,EAAAA,IAGO,e,aAFHA,EAAAA,EAAAA,IAAwJC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAA5GC,EAAAC,KAAI,CAAjBC,EAAMC,M,WAArCC,EAAAA,EAAAA,IAAwJC,EAAA,CAArGC,KAAMJ,EAAKI,KAAOC,MAAOL,EAAKM,WAAaL,GAAID,EAAKC,GAAKM,KAAMP,EAAKO,KAAOC,IAAKR,EAAKQ,IAAMC,IAAKR,G,oDACnJS,EAAAA,EAAAA,IAA2C,MAA3CC,EAA2C,W,wBCFtCjB,MAAM,Q,GACFA,MAAM,a,mBAENA,MAAM,U,8DAHnBC,EAAAA,EAAAA,IASU,UATVgB,EASU,EARND,EAAAA,EAAAA,IAOU,UAPVE,EAOU,EANNF,EAAAA,EAAAA,IAA0D,OAApDG,IAAKC,EAAAC,uBAAyBC,IAAG,GAAKC,EAAAb,c,WAC5CM,EAAAA,EAAAA,IAIM,MAJNQ,EAIM,CAHWD,EAAAV,MAAY,IAAJU,EAAAV,O,WAArBZ,EAAAA,EAAAA,IAA+C,QAAAwB,GAAAC,EAAAA,EAAAA,IAAdH,EAAAV,MAAI,K,gBACrCG,EAAAA,EAAAA,IAAiB,WAAAU,EAAAA,EAAAA,IAAXH,EAAAb,MAAI,GACGa,EAAAT,KAAU,IAAHS,EAAAT,M,WAApBb,EAAAA,EAAAA,IAA4C,QAAA0B,GAAAD,EAAAA,EAAAA,IAAbH,EAAAT,KAAG,K,mCA2D9C,GACIJ,KAAM,gBACNkB,MAAO,CACHrB,GAAI,CACAsB,KAAMC,OACNC,UAAU,GAEdrB,KAAM,CACFmB,KAAMG,OACND,UAAU,GAEdlB,KAAM,CACFgB,KAAMG,OACND,UAAU,GAEdpB,MAAO,CACHkB,KAAMG,OACND,UAAU,GAEdjB,IAAK,CACDe,KAAMG,OACND,UAAU,IAGlBE,SAAU,CACNZ,sBAAAA,GACI,MAAO,GAAGa,EAAAA,KAAWC,KAAKxB,OAC9B,I,UCtFZ,MAAMyB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QFuBA,GACI1B,KAAM,eACN2B,WAAY,CACRC,sBAAqBA,GAEzBjC,IAAAA,GACI,MAAO,CACHA,KAAM,GACNkC,KAAM,EACNC,QAAS,KAEjB,EACA,aAAMC,GACFN,KAAKO,SAAW,IAAIC,qBAChBC,UACSC,EAAQ,GAAGC,sBAAsBX,KAAKY,aAAa,mBAAmBZ,KAAKI,SAEpF,CAAES,WAAY,eAGZb,KAAKY,aAAa,cAExBZ,KAAKO,SAASO,QAAQd,KAAKe,MAAMC,SACrC,EACAC,aAAAA,GACyB,MAAjBjB,KAAKO,UACLP,KAAKO,SAASW,YAEtB,EACAC,QAAS,CACL,kBAAMP,CAAaQ,GACf,MAAMC,QAAiBC,EAAAA,EAAAA,IAAIF,GACJ,KAAnBC,EAASE,SACTvB,KAAK9B,KAAO8B,KAAK9B,KAAKsD,OAAOH,EAASnD,KAAKuD,SAC3CzB,KAAKI,OAEb,IG7DR,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASsB,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://the-simpsons/./src/views/LocationView.vue","webpack://the-simpsons/./src/components/LocationCardComponent.vue","webpack://the-simpsons/./src/components/LocationCardComponent.vue?e6a4","webpack://the-simpsons/./src/views/LocationView.vue?b278"],"sourcesContent":["<template>\r\n    <main>\r\n        <LocationCardComponent v-for=\"(item, id) in data\" :name=\"item.name\" :image=\"item.image_path\" :id=\"item.id\" :town=\"item.town\" :use=\"item.use\" :key=\"id\"/>\r\n        <div ref=\"sentinel\" class=\"sentinel\"></div>\r\n    </main>\r\n</template>\r\n\r\n<style scoped>\r\n    main {\r\n        flex-grow: 1;\r\n        background-color: var(--text-color-light);\r\n        display: grid;\r\n        padding: 1rem;\r\n    }\r\n  \r\n    @media screen and (min-width: 768px) {\r\n        main {\r\n            grid-template-columns: repeat(2, 1fr);\r\n        }\r\n    }\r\n\r\n    @media screen and (min-width: 1200px) {\r\n        main {\r\n            grid-template-columns: repeat(3, 1fr);\r\n        }\r\n    }\r\n</style>\r\n\r\n<script>\r\nimport LocationCardComponent from \"@/components/LocationCardComponent.vue\"\r\nimport { get } from \"@/services/GeneralService\"\r\n\r\nexport default {\r\n    name: 'LocationView',\r\n    components: {\r\n        LocationCardComponent\r\n    },\r\n    data() {\r\n        return {\r\n            data: [],\r\n            page: 1,\r\n            observr: null\r\n        }\r\n    },\r\n    async mounted() {\r\n        this.observer = new IntersectionObserver (\r\n            async (entries) => {\r\n                if  (entries[0].isIntersecting) await this.getLocations(`/locations?page=${this.page}`);\r\n            },\r\n            { rootMargin: \"32px\" }\r\n        );\r\n\r\n        await this.getLocations('/locations');\r\n\r\n        this.observer.observe(this.$refs.sentinel);\r\n    },\r\n    beforeUnmount() {\r\n        if (this.observer != null) {\r\n            this.observer.disconnect();\r\n        }\r\n    },\r\n    methods: {\r\n        async getLocations(endpoint) {\r\n            const response = await get(endpoint);\r\n            if (response.status == 200) {\r\n                this.data = this.data.concat(response.data.results);\r\n                this.page++\r\n            }  \r\n        }\r\n    },\r\n}\r\n</script>","<template>\r\n    <article class=\"card\">\r\n        <section class=\"container\">\r\n            <img :src=\"complete_portrait_path\" :alt=\"`${name} photo`\">\r\n            <div class=\"filter\">\r\n                <small v-if=\"town && town!=''\">{{town}}</small>\r\n                <h3>{{name}}</h3>\r\n                <small v-if=\"use && use!=''\">{{use}}</small>\r\n            </div>\r\n        </section>\r\n    </article>\r\n</template>\r\n\r\n<style scoped>\r\n    .card {\r\n        margin: 1rem;\r\n        border-radius: .5rem;\r\n        box-shadow: 0 0 .5rem .02rem #0009;\r\n        padding: .5rem;\r\n        background-color: var(--text-color-light);\r\n        transition: transform .3s ease;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex-grow: 1;\r\n        border-radius: .5rem;\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n\r\n    .container img {\r\n        object-fit: cover;\r\n        object-position: center;\r\n        flex-grow: 1;\r\n    }\r\n\r\n    .filter {\r\n        position: absolute;\r\n        inset: 0;\r\n        background-color: var(--color-filter-blur-2);\r\n        color: var(--text-color-light);\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        opacity: 0;\r\n        transition: opacity .3s ease;\r\n        text-align: center;\r\n    }\r\n\r\n    .card:hover {\r\n        transform: scale(1.1, 1.1);\r\n    }\r\n\r\n    .card:hover .filter {\r\n        opacity: 100%;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import {urlImage} from \"@/services/GeneralService\"\r\n    export default {\r\n        name: \"CardComponent\",\r\n        props: {\r\n            id: {\r\n                type: Number,\r\n                required: true\r\n            },\r\n            name: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            town: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            image: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            use: {\r\n                type: String,\r\n                required: true\r\n            }\r\n        },\r\n        computed: {\r\n            complete_portrait_path () {\r\n                return `${urlImage}${this.image}`\r\n            }\r\n        }\r\n    }\r\n</script>","import { render } from \"./LocationCardComponent.vue?vue&type=template&id=55b4c0da&scoped=true\"\nimport script from \"./LocationCardComponent.vue?vue&type=script&lang=js\"\nexport * from \"./LocationCardComponent.vue?vue&type=script&lang=js\"\n\nimport \"./LocationCardComponent.vue?vue&type=style&index=0&id=55b4c0da&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55b4c0da\"]])\n\nexport default __exports__","import { render } from \"./LocationView.vue?vue&type=template&id=add1f58e&scoped=true\"\nimport script from \"./LocationView.vue?vue&type=script&lang=js\"\nexport * from \"./LocationView.vue?vue&type=script&lang=js\"\n\nimport \"./LocationView.vue?vue&type=style&index=0&id=add1f58e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-add1f58e\"]])\n\nexport default __exports__"],"names":["ref","class","_createElementBlock","_Fragment","_renderList","$data","data","item","id","_createBlock","_component_LocationCardComponent","name","image","image_path","town","use","key","_createElementVNode","_hoisted_1","_hoisted_2","src","$options","complete_portrait_path","alt","$props","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","props","type","Number","required","String","computed","urlImage","this","__exports__","components","LocationCardComponent","page","observr","mounted","observer","IntersectionObserver","async","entries","isIntersecting","getLocations","rootMargin","observe","$refs","sentinel","beforeUnmount","disconnect","methods","endpoint","response","get","status","concat","results","render"],"sourceRoot":""}